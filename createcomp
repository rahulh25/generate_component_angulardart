#!/usr/bin/env python
import argparse, sys,os

class Solution:
    def __init__(self):
        self.component_name=''
        if self.create_arguments():
            directory_name=os.path.join(os.getcwd(),'lib','src',self.component_name)
            result=self.create_directory(directory_name)
            if result=='exists':
                print("Component already exists")
            elif result=='error':
                print("Could not create directory")
            elif result=='success':
                dartfilename=self.component_name+"_component.dart"
                htmlfilename=self.component_name+"_component.html"
                cssfilename=self.component_name+"_component.css"
                if self.create_dart_file(directory_name,self.component_name,dartfilename,htmlfilename,cssfilename):
                    if self.create_html_file(directory_name,htmlfilename):
                        if self.create_css_file(directory_name,cssfilename):
                            print("Component created at location ",directory_name)
                        else:
                            print("Error creating css file")
                    else:
                        print("Error creating html file")
                else:
                    print("Error creating dart file")
        else:
            print("Component name not given correctly")
    def create_directory(self,directory_name)->str:
        try:
            if os.path.exists(directory_name):
                return 'exists'
            os.makedirs(directory_name)
        except Exception as exp:
            print(exp)
            return 'error'
        return 'success'
    def create_dart_file(self,directory_name,component_name,dartfilename,htmlfilename,cssfilename)->bool:
        os.chdir(directory_name)
        try:
            component="@Component(\nselector: " +"'app-"+component_name+"',"+"\nstyleUrls: ["+"'"+cssfilename+"'"+"],"+"\ntemplateUrl: "+"'"+htmlfilename+"',"+"\ndirectives: [coreDirectives])"
            classname=component_name.capitalize()+"Component"
            fullclassDeclaration="class "+classname+" {\n final title='This page is working'; \n}"
            file_content="import 'package:angular/angular.dart';\n\n\n" +component +"\n\n\n"+fullclassDeclaration
            f=open(dartfilename,"w+")
            f.write(file_content)
            f.close()
        except Exception as exp:
            print("Dart file create error")
            return False
        return True
    def create_html_file(self,directory_name,htmlfilename)->bool:
        os.chdir(directory_name)
        try:
            f=open(htmlfilename,"w+")
            content="<h1>{{title}}</h1>"
            f.write(content)
            f.close()
        except Exception as exp:
            print("HTML file create error")
            return False
        return True
    def create_css_file(self,directory_name,cssfilename)->bool:
        os.chdir(directory_name)
        try:
            f=open(cssfilename,"w+")
            f.close()
        except Exception as exp:
            print("CSS file create error")
            return False
        return True
    def create_arguments(self):
        if len(sys.argv)<2:
            return False
        elif len(sys.argv)==2:
            self.component_name=sys.argv[1]
        else:
            return False
        return True

if __name__ == "__main__":
    Solution()